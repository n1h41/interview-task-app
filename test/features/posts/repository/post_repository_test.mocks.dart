// Mocks generated by Mockito 5.4.0 from annotations
// in interview_task_app/test/features/posts/repository/post_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:interview_task_app/features/posts/data/models/post_model.dart'
    as _i5;
import 'package:interview_task_app/features/posts/data/post_data_source.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostDataSource extends _i1.Mock implements _i3.PostDataSource {
  MockPostDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#api),
        ),
      ) as _i2.Dio);
  @override
  _i4.Future<List<_i5.PostModel>> getPosts(int? pageNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [pageNumber],
        ),
        returnValue: _i4.Future<List<_i5.PostModel>>.value(<_i5.PostModel>[]),
      ) as _i4.Future<List<_i5.PostModel>>);
}
